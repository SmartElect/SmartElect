# Generated by Django 2.2 on 2019-05-03 14:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import libya_elections.libya_bread
import libya_elections.phone_numbers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('register', '0001_initial'),
        ('voting', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='StaffPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('phone_number', models.CharField(max_length=13, verbose_name='phone number')),
                ('registration_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.RegistrationCenter', verbose_name='registration center')),
            ],
            options={
                'verbose_name': 'staff phone',
                'verbose_name_plural': 'staff phones',
                'ordering': ['registration_center__center_id', '-modification_date'],
                'permissions': (('read_staffphone', 'Can read staff phone'), ('browse_staffphone', 'Can browse staff phones')),
            },
            bases=(libya_elections.phone_numbers.FormattedPhoneNumberMixin, libya_elections.libya_bread.RegistrationCenterFormatterMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PreliminaryVoteCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('phone_number', models.CharField(help_text='Received from this phone', max_length=13, verbose_name='phone number')),
                ('option', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='option')),
                ('num_votes', models.PositiveIntegerField(verbose_name='number of votes')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voting.Election', verbose_name='election')),
                ('registration_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.RegistrationCenter', verbose_name='registration center')),
            ],
            options={
                'verbose_name': 'preliminary vote count',
                'verbose_name_plural': 'preliminary vote counts',
                'ordering': ['election', 'registration_center', 'option'],
                'permissions': (('read_preliminaryvotecount', 'Can read preliminary vote count'), ('browse_preliminaryvotecount', 'Can browse preliminary vote counts')),
            },
            bases=(libya_elections.phone_numbers.FormattedPhoneNumberMixin, libya_elections.libya_bread.ElectionFormatterMixin, libya_elections.libya_bread.RegistrationCenterFormatterMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PollingReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('phone_number', models.CharField(help_text='Received from this phone', max_length=13, verbose_name='phone number')),
                ('period_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='period number')),
                ('num_voters', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='number of voters')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voting.Election', verbose_name='election')),
                ('registration_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.RegistrationCenter', verbose_name='registration center')),
            ],
            options={
                'verbose_name': 'polling report',
                'verbose_name_plural': 'polling reports',
                'ordering': ['election_id', 'registration_center__center_id', '-period_number', '-modification_date'],
                'permissions': (('read_pollingreport', 'Can read polling report'), ('browse_pollingreport', 'Can browse polling reports')),
            },
            bases=(libya_elections.phone_numbers.FormattedPhoneNumberMixin, libya_elections.libya_bread.ElectionFormatterMixin, libya_elections.libya_bread.RegistrationCenterFormatterMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CenterOpen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('phone_number', models.CharField(help_text='Received from this phone', max_length=13, verbose_name='phone number')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voting.Election', verbose_name='election')),
                ('registration_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.RegistrationCenter', verbose_name='registration center')),
            ],
            options={
                'verbose_name': 'center open record',
                'verbose_name_plural': 'center open records',
                'ordering': ['election_id', 'registration_center__center_id'],
                'permissions': (('read_centeropen', 'Can read center open record'), ('browse_centeropen', 'Can browse center open record')),
            },
            bases=(libya_elections.phone_numbers.FormattedPhoneNumberMixin, libya_elections.libya_bread.ElectionFormatterMixin, libya_elections.libya_bread.RegistrationCenterFormatterMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CenterClosedForElection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voting.Election', verbose_name='election')),
                ('registration_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.RegistrationCenter', verbose_name='registration center')),
            ],
            options={
                'verbose_name': 'center closed for election',
                'verbose_name_plural': 'centers closed for election',
                'ordering': ['election_id', 'registration_center__center_id'],
                'permissions': (('read_centerclosedforelection', 'Can read center closed for an election'), ('browse_centerclosedforelection', 'Can browse centers closed for an election')),
            },
            bases=(libya_elections.libya_bread.ElectionFormatterMixin, libya_elections.libya_bread.RegistrationCenterFormatterMixin, models.Model),
        ),
    ]
