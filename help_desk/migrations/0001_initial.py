# Generated by Django 2.2 on 2019-05-03 14:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import libya_elections.libya_bread
import libya_elections.phone_numbers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('register', '0001_initial'),
        ('civil_registry', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='start time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='end time')),
                ('phone_number', libya_elections.phone_numbers.PhoneNumberField(blank=True, default=None, max_length=13, null=True, verbose_name='phone number')),
                ('changes_increased', models.BooleanField(default=False, verbose_name='changes increased')),
                ('review_classification', models.CharField(choices=[('unmarked', 'Not marked for review'), ('marked', 'Marked for review'), ('recommended', 'Recommendation made'), ('resolved', 'Resolved')], default='unmarked', max_length=12, verbose_name='review classification')),
                ('reason_marked', models.CharField(blank=True, choices=[('complaint', 'Person has complained about the service.'), ('accident', 'Accidentally unlocked.'), ('changed_mind', 'Person on the end of the phone changes their mind about unlocking.'), ('harassing', 'Phone call was harassing. '), ('other', 'Other reason, see comments.')], default='', max_length=14, verbose_name='reason marked')),
                ('recommended_action', models.CharField(blank=True, choices=[('seen', 'Mark as seen.'), ('relock', 'Re-lock.'), ('ignore', 'Ignore.')], default='', max_length=6, verbose_name='recommended action')),
                ('call_outcome', models.CharField(blank=True, choices=[('hungup', 'Hung up'), ('invalid_staff_id', 'Invalid staff ID'), ('invalid_staff_name', 'Wrong staff name'), ('invalid_staff_phone', 'Wrong staff phone'), ('invalid_nid', 'Invalid NID'), ('invalid_name_dob', 'Invalid name or birth year'), ('invalid_frn', "Invalid FRN and mother's name"), ('unregistered', 'Not registered'), ('registered', 'No help needed'), ('same_phone', 'No change'), ('increased_changes', 'Increased changes'), ('unlocked', 'Unlocked'), ('relocked', 'Relocked'), ('abandoned', 'Abandoned')], max_length=20, null=True, verbose_name='call outcome')),
                ('citizen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='help_desk_cases', to='civil_registry.Citizen', verbose_name='citizen')),
            ],
            options={
                'verbose_name': 'case',
                'verbose_name_plural': 'cases',
                'ordering': ['-start_time'],
                'permissions': (('read_case', 'Can read case'), ('cancel_registration_change', 'Can cancel change period'), ('mark_case', 'Can mark case for review'), ('recommend_case', 'Can recomment action on case'), ('resolve_case', 'Can mark a case as resolved'), ('read_report', 'Can read reports'), ('add_operator', 'Can add operator'), ('add_supervisor', 'Can add supervisor'), ('add_senior_staff', 'Can add senior staff'), ('add_viewonly', 'Can add view-only users'), ('add_manager', 'Can add help desk managers'), ('change_staff_password', 'Can set password for help desk staff')),
            },
            bases=(libya_elections.libya_bread.StartEndTimeFormatterMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FieldStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('name', models.CharField(default='', max_length=160, verbose_name='name')),
                ('staff_id', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(999)], verbose_name='staff id')),
                ('phone_number', libya_elections.phone_numbers.PhoneNumberField(max_length=13, verbose_name='phone number')),
                ('suspended', models.BooleanField(blank=True, default=False, verbose_name='suspended')),
            ],
            options={
                'verbose_name': 'field staff member',
                'verbose_name_plural': 'field staff members',
                'ordering': ['name', 'staff_id'],
                'permissions': [('browse_fieldstaff', 'Can browse field staff'), ('read_fieldstaff', 'Can read field staff'), ('suspend_fieldstaff', 'Can suspend field staff')],
            },
            bases=(libya_elections.phone_numbers.FormattedPhoneNumberMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('kind', models.CharField(choices=[('comment', 'Comment'), ('mark', 'Mark case for review'), ('recommend', 'Recommend action on case'), ('cancel', 'Cancel open re-registration period'), ('resolve', 'Mark case as resolved')], default='comment', max_length=10, verbose_name='kind of update')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp')),
                ('reason_marked', models.CharField(blank=True, choices=[('complaint', 'Person has complained about the service.'), ('accident', 'Accidentally unlocked.'), ('changed_mind', 'Person on the end of the phone changes their mind about unlocking.'), ('harassing', 'Phone call was harassing. '), ('other', 'Other reason, see comments.')], default='', max_length=14, verbose_name='reason marked')),
                ('recommended_action', models.CharField(blank=True, choices=[('seen', 'Mark as seen.'), ('relock', 'Re-lock.'), ('ignore', 'Ignore.')], default='', max_length=6, verbose_name='recommended action')),
                ('comment', models.TextField(blank=True, verbose_name='comment')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='help_desk.Case', verbose_name='case')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'update',
                'verbose_name_plural': 'updates',
                'ordering': ['timestamp'],
            },
            bases=(libya_elections.libya_bread.TimestampFormatterMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ScreenRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('name', models.CharField(max_length=40, verbose_name='screen name')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('button', models.CharField(blank=True, choices=[('goback', 'Previous screen'), ('startover', 'Start from Beginning'), ('yes', 'Yes'), ('no', 'No'), ('no_citizen', 'No, Caller is a Citizen'), ('match', 'Name and ID match'), ('nomatch', 'Name and ID do not match'), ('continue', 'Continue'), ('hungup', 'Caller hung up'), ('submit', 'Submit'), ('unable', 'Unable to Provide'), ('done', 'Done')], help_text='Button the operator pressed to finish the screen', max_length=10)),
                ('input', models.CharField(blank=True, default='', help_text='Input field from screen', max_length=80)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screens', to='help_desk.Case')),
            ],
            options={
                'verbose_name': 'screen record',
                'verbose_name_plural': 'screen records',
            },
        ),
        migrations.AddField(
            model_name='case',
            name='current_screen',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_case', to='help_desk.ScreenRecord', verbose_name='current screen'),
        ),
        migrations.AddField(
            model_name='case',
            name='field_staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='help_desk_cases', to='help_desk.FieldStaff', verbose_name='field staff'),
        ),
        migrations.AddField(
            model_name='case',
            name='operator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases_as_operator', to=settings.AUTH_USER_MODEL, verbose_name='operator'),
        ),
        migrations.AddField(
            model_name='case',
            name='registration',
            field=models.ForeignKey(blank=True, help_text='Registration of citizen at time of call', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cases', to='register.Registration', verbose_name='registration'),
        ),
        migrations.CreateModel(
            name='ActiveRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modification date')),
                ('end_date', models.DateField(null=True, verbose_name='end date')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='active_range', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'active range',
                'verbose_name_plural': 'active ranges',
            },
        ),
    ]
